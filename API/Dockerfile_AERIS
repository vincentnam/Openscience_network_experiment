# syntax=docker/dockerfile:1
FROM python:alpine
WORKDIR /code
ENV FLASK_APP=api.py
ENV FLASK_RUN_HOST=0.0.0.0
RUN apk add --no-cache gcc musl-dev linux-headers
COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt
RUN sed -i "s/def get_metadata(key,model,operator,operand):\
    '''\
    Get metadata from request : gateway technical interoperability function\
    :param key:\
    :param model:\
    :param operator:\
    :param operand:\
    :return: Results of request as list of objects\
    '''\
    # FUNCTION TO MODIFY BASED ON NEEDS\
    pass\
\def get_metadata(key,model,operator,operand):\
    '''\
    Get metadata from request : gateway technical interoperability function\
    :param key:\
    :param model:\
    :param operator:\
    :param operand:\
    :return: Results of request as list of objects\
    '''\
    # FUNCTION TO MODIFY BASED ON NEEDS\
    if registry["models"][model]["keys"][key] == "integer":\
        return json_util.dumps(list(pymongo.MongoClient("database_json:27017").AERIS.metadata.find(\
            {key: {operator_list_def(operator): float(operand)}},{"_id":False})))\
    else:\
        return json_util.dumps(list(pymongo.MongoClient("database_json:27017").AERIS.metadata.find(\
            {key: {operator_list_def(operator): operand}}, {"_id": False})))/g" api.py
EXPOSE 5000
COPY . .
CMD ["flask", "run", "--debug"]


